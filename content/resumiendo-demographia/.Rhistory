library(haven) #to read Stata DS
read_dta("../data/casen2017.dta") #read DS as tibble
read_dta("./data/casen2017.dta") #read DS as tibble
casen2017
df <- read_dta("./data/casen2017.dta") #read DS as tibble
str(df)
summary(df)
library(dplyr)
print(df)
head(df)
df$y1
mean(df$y1)
mean(df$y1, ignore.na=TRUE)
?mean
mean(df$y1, na.rm = True)
mean(df$y1, na.rm = TRUE)
mean(df$y4a, na.rm = TRUE)
mean(df$y4a, na.rm = TRUE) / 12
mean(df$ytotcor, na.rm = TRUE) / 12
mean(df$ytotcor, na.rm = TRUE)
df$ypchtrabajo
mean(df$ypchtrabajo)
mean(df$ypchtrabajo, na.rm=TRUE)
plot(df$ypchtrabajo)
max(df$ypchtrabajo)
max(df$ypchtrabajo, na.rm=TRUE)
plot(df$ypchtrabajo, na.rm=TRUE)
library(ggplot)
library(ggplot2)
ggplot() + geom_jitter(data = df, x = 1, y = ypchtrabajo)
df$ypchtrabajo
ggplot() + geom_jitter(data = df, aes(x = 1, y = ypchtrabajo))
ggplot() + geom_jitter(data = df, aes(x = 1, y = ypchtrabajo))
ggplot() + geom_jitter(data = df, aes(x = 1, y = ypchtrabajo, alpha=0.7, col='red'))
require(scales)
ggplot() + geom_jitter(data = df, aes(x = 1, y = ypchtrabajo, alpha=0.7, col='red'))
df_ingresos_per_capita <- df$ypchtrabajo
df_ingresos_per_capita
summary(df_ingresos_per_capita)
plot <- ggplot() + geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = ypchtrabajo))
library(haven) #to read Stata DS
library(dplyr)
library(ggplot2)
require(scales)
plot <- ggplot() + geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = ypchtrabajo))
plot <- ggplot() + geom_jitter(data = df_ingresos_per_capita, aes(x = 1))
str(ingresos_per_capita)
str(df_ingresos_per_capita)
df_new <- select(df$ypchtrabajo)
tibble(df_ingresos_per_capita)
df_ingresos_per_capita <- tibble(df$ypchtrabajo)
plot <- ggplot() + geom_jitter(data = df_ingresos_per_capita, aes(x = 1))
plot
str(df_ingresos_per_capita)
head(df_ingresos_per_capita)
plot <- ggplot() + geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo))
plot
plot + scale_y_continuous()
p + scale_x_continuous(labels = comma)
plot + scale_x_continuous(labels = comma)
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo)) +
scale_y_continuous(labels = comma)
plot
max(df_ingresos_per_capita)
max(df_ingresos_per_capita, na.rm=TRUE)
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.7)) +
scale_y_continuous(labels = comma)
plot
plot
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6)) +
scale_y_continuous(labels = comma) +
labs(x = NULL, y = 'Ingreso del trabajo per cápita del hogar')
plot
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6)) +
scale_y_continuous(labels = comma) +
scale_x_continous(breaks=NULL)
labs(x = NULL, y = 'Ingreso del trabajo per cápita')
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6)) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL)
labs(x = NULL, y = 'Ingreso del trabajo per cápita')
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6)) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso del trabajo per cápita')
plot
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6, show.legend=FALSE)) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
plot
library(readr)
write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
head(df_ingresos_per_capita)
head(df_ingresos_per_capita, 20)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita1 <- read_csv("./data/df_ingresos_per_capita.csv")
head(df_ingresos_per_capita1)
head(df_ingresos_per_capita)
equal(df_ingresos_per_capita,df_ingresos_per_capita1)
identical(df_ingresos_per_capita,df_ingresos_per_capita1)
all_equal(df_ingresos_per_capita,df_ingresos_per_capita1)
all_equal(df_ingresos_per_capita1,df_ingresos_per_capita1)
str(df_ingresos_per_capita)
str(df_ingresos_per_capita1)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita <- read_csv("./data/df_ingresos_per_capita.csv")
plot <- ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
plot
str(df_ingresos_per_capita)
df_ingresos_per_capita
plot(df_ingresos_per_capita)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita <- read_csv("./data/df_ingresos_per_capita.csv")
library(haven)
library(dplyr)
library(ggplot2)
library(readr)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita <- read_csv("./data/df_ingresos_per_capita.csv")
df_ingresos_per_capita
ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
library("scales")
ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
plot(df_ingresos_per_capita)
ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6))
df_ingresos_per_capita$`df$ypchtrabajo`
colnames(df_ingresos_per_capita)
library(haven)
library(dplyr)
library(ggplot2)
library(readr)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita <- read_csv("./data/df_ingresos_per_capita.csv")
str(df_ingresos_per_capita)
library("scales")
ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = df$ypchtrabajo, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = NULL, y = 'Ingreso per cápita')
class(df_ingresos_per_capita)
class(df_ingresos_per_capita$`df$ypchtrabajo`)
plot(df_ingresos_per_capita)
hdi(df_ingresos_per_capita$`df$ypchtrabajo`,credMass = 0.99)
library(coda)
HPDinterval(df_ingresos_per_capita$`df$ypchtrabajo`,prob = 0.99)
library(HDIInterval)
library(HDInterval)
install.packages(HDInterval)
install.packages("HDInterval")
library(HDInterval)
hdi(df_ingresos_per_capita$`df$ypchtrabajo`,credMass = 0.99)
hdi_capita <- hdi(df_ingresos_per_capita$`df$ypchtrabajo`,credMass = 0.99)
hdi_capita
hdi_capita[0]
hdi_capita[1]
hdi_capita[2]
hdi_capita[1,2]
hdi_capita[0,2]
hdi_capita[0,1]
str(hdi_capita)
hdi_capita[[0]]
hdi_capita[0]
hdi_capita[1]
hdi_capita[2]
hdi_capita[3]
hdi_capita[1:2]
hdi_capita[1,1:2]
hdi_capita[1] > 1
hdi_capita[1] < 1
hdi_vect <- df_ingresos_per_capita %>%
filter(`df$ypchtrabajo` >= hdi_capital[1] AND
hdi_vect <- df_ingresos_per_capita %>%
filter(`df$ypchtrabajo` >= hdi_capital[1] &
`df$ypchtrabajo` <= hdi_capita[2])
library(magrittr)
hdi_capita <- hdi(df_ingresos_per_capita$`df$ypchtrabajo`,credMass = 0.99)
hdi_vect <- df_ingresos_per_capita %>%
filter(`df$ypchtrabajo` >= hdi_capital[1] &
`df$ypchtrabajo` <= hdi_capita[2])
hdi_vect <- df_ingresos_per_capita %>%
filter(`df$ypchtrabajo` >= hdi_capita[1] &
`df$ypchtrabajo` <= hdi_capita[2])
df_ingresos_per_capita$`df$ypchtrabajo` >= hdi_capita[1]
filter(df_ingresos_per_capita,`df$ypchtrabajo` >= hdi_capita[1])
filter(df_ingresos_per_capita$`df$ypchtrabajo` >= hdi_capita[1])
filter(df_ingresos_per_capita,`df$ypchtrabajo` >= hdi_capita[1])
filter(df_ingresos_per_capita,df$ypchtrabajo >= hdi_capita[1])
colnames(df_ingresos_per_capita)
colnames(df_ingresos_per_capita)[0]
colnames(df_ingresos_per_capita)[1]
colnames(df_ingresos_per_capita) <- 'values'
colnames(df_ingresos_per_capita)
---
title: "Perspectivas demográficas"
output:
html_document:
css: ../../css/main.css
author: "Thomas Brochhagen"
date: "Última actualización: `r Sys.Date()`"
---
```{r, setup, include = FALSE}
pdf.options(encoding='ISOLatin2')
```
La manera de la que hablamos de datos demográficos puede tener un gran impacto en nuestra percepción -- tanto de nosotros mismos como del país en el que vivimos. Un ejemplo notorio es como hablamos de cambios  de pobreza en el país. Saber si hay más, menos, o la misma cantidad de pobres que en años anteriores es muchas veces visto como una respuesta a la pregunta si estamos mejor, peor, o igual que antes. Por ejemplo, a base de sus ingresos en el $2017$,  la [encuesta CASEN 2017](http://observatorio.ministeriodesarrollosocial.gob.cl/) cifra a $8,6\%$ de la población como pobre. Lo que contrasta con el año $2015$, donde se cifra a $11,7\%$ de pobres.
¿Qué nos dicen estos números? No mucho. No tiene por qué significar que hay menos pobres. Ni mucho menos que el país está mejor. Para apreciar por qué vale la pena ir lento, empezando por apreciar lo que representa una cifra como "$8,6\%$ de pobreza."
<center>
![](./data/cl-size.gif)
</center>
```{r, echo = FALSE, fig.width=6, fig.height=4, fig.align = 'center', warning=FALSE, message=FALSE}
library(haven)
library(dplyr)
library(ggplot2)
library(readr)
#df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
#df_ingresos_per_capita <- tibble(df$ypchtrabajo) #Ingreso del trabajo per cápita del hogar corregido
#write_csv(df_ingresos_per_capita, './data/df_ingresos_per_capita.csv')
df_ingresos_per_capita <- read_csv("./data/df_ingresos_per_capita.csv")
colnames(df_ingresos_per_capita) <- 'values'
library("scales")
ggplot() +
geom_jitter(data = df_ingresos_per_capita, aes(x = 1, y = values, alpha = 0.6), show.legend=FALSE) +
scale_y_continuous(labels = comma) +
scale_x_continuous(breaks=NULL) +
labs(x = 'Hogares encuestados', y = 'Ingreso per capita')
## From main report, page 15: Todas las diferencias estadísticamente significativas han sido calculadas a un nivel de confianza del 95%, utilizando test de diferencia de medias o de proporciones según sea el caso.
```
```{r, echo = FALSE, fig.width=6, fig.height=4, fig.align='center', warning=FALSE, message=FALSE}
ggplot(data = df_ingresos_per_capita, aes(values)) +
geom_density()
```
```{r}
library(HDInterval)
library(magrittr)
hdi_capita <- hdi(df_ingresos_per_capita$values,credMass = 0.99)
hdi_vect <- df_ingresos_per_capita %>%
filter(values >= hdi_capita[1] &
values <= hdi_capita[2])
```
hdi_vect
ggplot(data = hdi_vect, aes(values)) +
geom_density()
ggplot(data = hdi_vect, aes(values)) +
geom_density()
hdi_capita <- hdi(df_ingresos_per_capita$values,credMass = 0.95)
hdi_vect <- df_ingresos_per_capita %>%
filter(values >= hdi_capita[1] &
values <= hdi_capita[2])
ggplot(data = hdi_vect, aes(values)) +
geom_density()
len(hdi_vect)
length(hdi_vect)
str(hdi_vect)
str(df_ingresos_per_capita)
length(df_ingresos_per_capita$values)
hdi_upper <- 0.95
hdi_upper
hdi_upper <- 0.98
```{r}
library(HDInterval)
hdi_capita <- hdi(df_ingresos_per_capita$values,credMass = hdi_upper)
hdi_vect <- df_ingresos_per_capita %>%
filter(values >= hdi_capita[1] &
values <= hdi_capita[2])
ggplot(data = hdi_vect, aes(values)) +
geom_density()
df_ingresos_per_capita %>%
ggplot(aes(x = values)) +
geom_histogram()
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram()
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(binwidth=100)
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(binwidth=50)
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(binwidth=25)
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram()
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(bins=100)
hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(binwidth=10000)
df_ingresos_per_capita %>%
ggplot(aes(x = values)) +
geom_histogram(bindwidth=10000)
df_ingresos_per_capita %>%
ggplot(aes(x = values)) +
geom_histogram()
install.packages("plotly")
install.packages("plotly")
library(plotly)
pl <- hdi_vect %>%
ggplot(aes(x = values)) +
geom_histogram(binwidth=10000)
ggplotly(pl)
df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
library(readr)
df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
library(haven)
df <- read_dta("./data/casen2017.dta") #datos encuesta CASEN 2017
